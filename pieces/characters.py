import numpy as np
import cv2
from word import Word

class Character(object): 
       
    # Constructor 
    def __init__(self, parent, img, boundary): 
        if not isinstance(parent, Word):
            print('Parent of a character should be a word!!')
            raise TypeError
        self.parent = parent                # The word that this character is within
        self.img = img                      # The master cv2 img this is being drawn to
        self.boundary = boundary            # The Boundary object (usually a BoundingCircle)

    def draw(self):
        pass
   
########################################## a - A ############################################
class Character_a(Character): 
       
    # Constructor 
    def __init__(self, parent, img, boundary): 
        super().__init__(parent, img, boundary)
        
    def draw(self):
        pass
   
class Character_A(Character): 
       
    # Constructor 
    def __init__(self, parent, img, boundary): 
        super().__init__(parent, img, boundary)

    def draw(self):
        pass
   

########################################## b - B ############################################

########################################## c - C ############################################

########################################## d - D ############################################

########################################## e - E ############################################

########################################## f - F ############################################

########################################## G - G ############################################

########################################## H - H ############################################

########################################## i - I ############################################

########################################## j - J ############################################

########################################## k - K ############################################

########################################## l - L ############################################

########################################## m - M ############################################

########################################## n - N ############################################

########################################## o - O ############################################

########################################## p - P ############################################

########################################## q - Q ############################################

########################################## r - R ############################################

########################################## s - S ############################################

########################################## t - T ############################################

########################################## u - U ############################################

########################################## v - V ############################################

########################################## w - W ############################################

########################################## x - X ############################################

########################################## y - Y ############################################

########################################## z - Z ############################################

########################################## . ? ! ############################################